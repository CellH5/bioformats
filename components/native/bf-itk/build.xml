<!--
build.xml

Ant build file for the Bio-Formats ITK plugin.
Download Apache Ant from http://ant.apache.org/.
Type "ant -p" for a list of targets.
-->

<project name="bf-itk" default="compile" basedir=".">
  <description>
    Build file for Bio-Formats ITK plugin
  </description>
  <property name="root.dir" location="../../.."/>
  <import file="${root.dir}/ant/common.xml"/>
  <property file="build.properties"/>

  <target name="check-jace">
    <available file="${jace.home}/release/lib" property="jaceFound"/>
    <if>
      <isset property="jaceFound"/>
      <else>
<echo>
This component requires Jace, available from:
  http://sourceforge.net/projects/jace/

Please set the jace.home property to point to
your Jace installation directory. E.g.:
</echo>
        <!-- HACK - Document need for forward slashes even on Windows. -->
        <if>
          <isset property="isWindows"/>
          <then>
<echo>
  ant -Djace.home=C:/jace
</echo>
          </then>
          <else>
<echo>
  ant -Djace.home=${user.home}/jace
</echo>
          </else>
        </if>
<echo>
Please use an absolute path, not a relative one,
and use forward slashes (/), not backslashes (\).

You can check out the latest Jace code from
the Subversion repository using the command:
  svn co https://jace.svn.sourceforge.net/svnroot/jace/trunk jace
</echo>
        <fail message="Jace not found."/>
      </else>
    </if>
  </target>

  <target name="check-itk">
    <available file="${itk.home}/ITKConfig.cmake" property="itkFound"/>
    <if>
      <isset property="itkFound"/>
      <else>
<echo>
This component requires ITK, available from:
  http://itk.org/

Please set the itk.home property to point to
your ITK build directory. E.g.:
</echo>
        <!-- HACK - Document need for forward slashes even on Windows. -->
        <if>
          <isset property="isWindows"/>
          <then>
<echo>
  ant -Ditk.home=C:/ITK
</echo>
          </then>
          <else>
<echo>
  ant -Ditk.home=${user.home}/itk
</echo>
          </else>
        </if>
<echo>
Please use an absolute path, not a relative one,
and use forward slashes (/), not backslashes (\).

You can download or check out the latest ITK code from
the CVS repository by following the instructions at:
  http://itk.org/ITK/resources/software.html
</echo>
        <fail message="ITK not found."/>
      </else>
    </if>
  </target>

  <target name="gen-makefile" depends="check-jace, check-itk"
    description="generate build system for Bio-Formats ITK plugin">
    <mkdir dir="${build.dir}"/>
    <if>
      <isset property="isWindows"/>
      <then>
        <property name="cmake.generator" value="${cmake.generator.windows}"/>
      </then>
      <else>
        <property name="cmake.generator" value="${cmake.generator.other}"/>
      </else>
    </if>
    <exec executable="cmake" dir="${build.dir}" failonerror="true">
      <arg value="-G${cmake.generator}"/>
      <arg value="-DJACE_DIR=${jace.home}"/>
      <arg value="-DITK_DIR=${itk.home}"/>
      <arg value=".."/>
    </exec>
  </target>

  <target name="compile" depends="gen-makefile"
    description="build Bio-Formats C++ library">
    <mkdir dir="${build.dir}"/>
    <if>
      <isset property="isWindows"/>
      <then>
        <exec executable="cmd" dir="${build.dir}" failonerror="true">
          <arg value="/c"/>
          <arg value="start"/>
          <arg value="BioFormatsImageIO.sln"/>
        </exec>
<echo>
Please use Visual Studio to complete the build.
In Visual Studio, press F7, or select
"Build solution" from the "Build" menu.

When the build is complete, run "ant dist" to
copy binaries to their proper locations for
usage and/or distribution.
</echo>
      </then>
      <else>
        <exec executable="make" dir="${build.dir}"
          error="${build.dir}/stderr.log" failonerror="true"/>
<echo>
The build is complete; now run "ant dist" to
copy binaries to their proper locations for
usage and/or distribution.
</echo>
      </else>
    </if>
  </target>

  <target name="dist" depends="check-itk"
    description="bundle binaries for distribution">
    <!-- CTR TODO - check whether all binaries actually exist -->

    <property name="bf-itk.dist.dir" value="${dist.dir}/bf-itk"/>
    <mkdir dir="${bf-itk.dist.dir}"/>

    <property name="itk-bin.dir" value="${itk.home}/bin"/>

    <echo/>
    <echo>-- Copying Bio-Formats Java libraries --</echo>
    <echo/>
    <if>
      <isset property="isWindows"/>
      <then>
        <property name="bf-cpp.build" value="${bf-cpp.build.windows}"/>
        <property name="jace.build" value="${jace.build.windows}"/>
        <property name="bf-itk.lib" value="${bf-itk.lib.windows}"/>
        <property name="bf-itk.build" value="${bf-itk.build.windows}"/>
      </then>
      <else>
        <property name="bf-cpp.build" value="${bf-cpp.build.other}"/>
        <property name="jace.build" value="${jace.build.other}"/>
        <property name="bf-itk.lib" value="${bf-itk.lib.other}"/>
        <property name="bf-itk.build" value="${bf-itk.build.other}"/>
      </else>
    </if>
    <copy file="${bf-cpp.build}/loci_tools.jar" todir="${bf-itk.dist.dir}"/>
    <copy file="${bf-cpp.build}/jace-runtime.jar" todir="${bf-itk.dist.dir}"/>

    <echo/>
    <echo>-- Copying Bio-Formats C++ shared libraries --</echo>
    <echo/>
    <copy todir="${bf-itk.dist.dir}">
      <fileset dir="${bf-cpp.build}" includes="*.so"/>
      <fileset dir="${bf-cpp.build}" includes="*.dylib"/>
      <fileset dir="${bf-cpp.build}" includes="*.jnilib"/>
      <fileset dir="${bf-cpp.build}" includes="*.dll"/>
      <fileset dir="${jace.build}" includes="*.so"/>
      <fileset dir="${jace.build}" includes="*.dylib"/>
      <fileset dir="${jace.build}" includes="*.jnilib"/>
      <fileset dir="${jace.build}" includes="*.dll"/>
    </copy>

    <echo/>
    <echo>-- Copying Bio-Formats IO library --</echo>
    <echo/>
    <copy todir="${bf-itk.dist.dir}">
      <fileset dir="${bf-itk.build}" includes="*.so"/>
      <fileset dir="${bf-itk.build}" includes="*.dylib"/>
      <fileset dir="${bf-itk.build}" includes="*.jnilib"/>
      <fileset dir="${bf-itk.build}" includes="*.dll"/>
    </copy>

    <echo/>
    <echo>-- Copying distribution --</echo>
    <echo/>
    <copy todir="${itk.home}/bin">
      <fileset dir="${bf-itk.dist.dir}"/>
    </copy>

    <echo/>
    <echo>-- Copying Bio-Formats ITK plugin --</echo>
    <echo/>
    <copy todir="${bf-itk.dist.dir}">
      <fileset dir="${bf-itk.lib}"/>
    </copy>

    <echo/>
    <echo>-- Creating distribution archive --</echo>
    <echo/>
    <if>
      <isset property="isWindows"/>
      <then>
        <!-- make a zip archive -->
        <zip destfile="${dist.dir}/bf-itk.zip" basedir="${bf-itk.dist.dir}"/>
      </then>
      <else>
        <!-- make a tar.gz archive -->
        <!--<tar destfile="${dist.dir}/bf-itk.tar.gz"
          basedir="${bf-itk.dist.dir}" compression="gzip"/>-->
        <!-- HACK - tar does not preserve permissions; use exec instead -->
        <echo>Building tar: bf-itk.tar.gz</echo>
        <exec executable="tar">
          <arg value="czf"/>
          <arg value="${dist.dir}/bf-itk.tar.gz"/>
          <arg value="-C"/>
          <arg value="${dist.dir}"/>
          <arg value="bf-itk"/>
        </exec>
      </else>
    </if>

    <!-- give some instructions on how to proceed -->
<echo>
-- How to proceed --

If you compiled ITK with BUILD_EXAMPLES set to ON,
you can test the plugin with the following commands:

  export ITK_AUTOLOAD_PATH="${build.dir}/lib/"
  cd "${itk-bin.dir}"
  ./ImageHistogram1 /path/to/sample/dataset

If you run the ant dist target, use this command instead:

  export ITK_AUTOLOAD_PATH="${build.dir}/dist/bf-itk/"

If you use a TIFF file, you can compare the histogram results between
the Bio-Formats importer and the built-in ITK TIFF reader by setting
or unsetting the ITK_AUTOLOAD_PATH variable respectively.
</echo>
  </target>

  <target name="init"/>

</project>
